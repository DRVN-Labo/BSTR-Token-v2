/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */

import { GenericContractsDeclaration } from "../utils/scaffold-eth/contract";

const deployedContracts: GenericContractsDeclaration = {
  84532: {
    BSTRToken: {
      address: "0xcB64a719D7e7749BFD18dc1815f1EF3C28F083E2",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "initialSupply_",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "feeReceiver_",
              type: "address",
            },
            {
              internalType: "address",
              name: "swapRouter_",
              type: "address",
            },
            {
              internalType: "address[]",
              name: "collectors_",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "shares_",
              type: "uint256[]",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "excluded",
              type: "bool",
            },
          ],
          name: "ExcludedFromFees",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FeeCollected",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "share",
              type: "uint256",
            },
          ],
          name: "FeeCollectorAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "FeeCollectorRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "oldShare",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newShare",
              type: "uint256",
            },
          ],
          name: "FeeCollectorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "feesInToken",
                  type: "bool",
                },
                {
                  internalType: "uint16",
                  name: "buyFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "sellFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "transferFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "burnFeeRatio",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "liquidityFeeRatio",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "collectorsFeeRatio",
                  type: "uint16",
                },
              ],
              indexed: false,
              internalType: "struct TaxableToken.FeeConfiguration",
              name: "configuration",
              type: "tuple",
            },
          ],
          name: "FeeConfigurationUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "pairAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isLp",
              type: "bool",
            },
          ],
          name: "SetLpPool",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "router",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "pair",
              type: "address",
            },
          ],
          name: "SwapRouterUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "updater",
              type: "address",
            },
          ],
          name: "TaxRateUpdaterChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "BURN_ADDRESS",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_PRECISION",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_COLLECTORS",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_FEE",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "share",
              type: "uint256",
            },
          ],
          name: "addFeeCollector",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "autoProcessFees",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "inToken",
              type: "bool",
            },
          ],
          name: "distributeFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "feeCollectorShare",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "startIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "feeCollectors",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "feeConfiguration",
          outputs: [
            {
              internalType: "bool",
              name: "feesInToken",
              type: "bool",
            },
            {
              internalType: "uint16",
              name: "buyFees",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "sellFees",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "transferFees",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "burnFeeRatio",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "liquidityFeeRatio",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "collectorsFeeRatio",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isExcludedFromFees",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isFeeCollector",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "pairAddress",
              type: "address",
            },
          ],
          name: "isLpPool",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "liquidityOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numTokensToSwap",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "minAmountOut",
              type: "uint256",
            },
          ],
          name: "processFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "removeFeeCollector",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "autoProcess",
              type: "bool",
            },
          ],
          name: "setAutoprocessFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "feesInToken",
                  type: "bool",
                },
                {
                  internalType: "uint16",
                  name: "buyFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "sellFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "transferFees",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "burnFeeRatio",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "liquidityFeeRatio",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "collectorsFeeRatio",
                  type: "uint16",
                },
              ],
              internalType: "struct TaxableToken.FeeConfiguration",
              name: "configuration",
              type: "tuple",
            },
          ],
          name: "setFeeConfiguration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bool",
              name: "excluded",
              type: "bool",
            },
          ],
          name: "setIsExcludedFromFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "pairAddress",
              type: "address",
            },
            {
              internalType: "bool",
              name: "isLp",
              type: "bool",
            },
          ],
          name: "setIsLpPool",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "setLiquidityOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "setNumTokensToSwap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newRouter",
              type: "address",
            },
          ],
          name: "setSwapRouter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "updater",
              type: "address",
            },
          ],
          name: "setTaxRateUpdater",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "buyRate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "sellRate",
              type: "uint256",
            },
          ],
          name: "setTaxRates",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "swapPair",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "swapRouter",
          outputs: [
            {
              internalType: "contract IUniswapV2Router02",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "taxRateUpdater",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalFeeCollectorsShares",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "share",
              type: "uint256",
            },
          ],
          name: "updateFeeCollectorShare",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        DOMAIN_SEPARATOR:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        allowance: "contracts/libraries/TaxableToken.sol",
        approve: "contracts/libraries/TaxableToken.sol",
        balanceOf: "contracts/libraries/TaxableToken.sol",
        decimals: "contracts/libraries/TaxableToken.sol",
        decreaseAllowance: "contracts/libraries/TaxableToken.sol",
        eip712Domain:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        increaseAllowance: "contracts/libraries/TaxableToken.sol",
        name: "contracts/libraries/TaxableToken.sol",
        nonces: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        permit: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        symbol: "contracts/libraries/TaxableToken.sol",
        totalSupply: "contracts/libraries/TaxableToken.sol",
        transfer: "contracts/libraries/TaxableToken.sol",
        transferFrom: "contracts/libraries/TaxableToken.sol",
        CLOCK_MODE:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        checkpoints:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        clock: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        delegate:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        delegateBySig:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        delegates:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        getPastTotalSupply:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        getPastVotes:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        getVotes:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        numCheckpoints:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        BURN_ADDRESS: "contracts/libraries/TaxableToken.sol",
        FEE_PRECISION: "contracts/libraries/TaxableToken.sol",
        MAX_COLLECTORS: "contracts/libraries/TaxableToken.sol",
        MAX_FEE: "contracts/libraries/TaxableToken.sol",
        addFeeCollector: "contracts/libraries/TaxableToken.sol",
        autoProcessFees: "contracts/libraries/TaxableToken.sol",
        distributeFees: "contracts/libraries/TaxableToken.sol",
        feeCollectorShare: "contracts/libraries/TaxableToken.sol",
        feeCollectors: "contracts/libraries/TaxableToken.sol",
        feeConfiguration: "contracts/libraries/TaxableToken.sol",
        isExcludedFromFees: "contracts/libraries/TaxableToken.sol",
        isFeeCollector: "contracts/libraries/TaxableToken.sol",
        isLpPool: "contracts/libraries/TaxableToken.sol",
        liquidityOwner: "contracts/libraries/TaxableToken.sol",
        numTokensToSwap: "contracts/libraries/TaxableToken.sol",
        processFees: "contracts/libraries/TaxableToken.sol",
        removeFeeCollector: "contracts/libraries/TaxableToken.sol",
        setAutoprocessFees: "contracts/libraries/TaxableToken.sol",
        setFeeConfiguration: "contracts/libraries/TaxableToken.sol",
        setIsExcludedFromFees: "contracts/libraries/TaxableToken.sol",
        setIsLpPool: "contracts/libraries/TaxableToken.sol",
        setLiquidityOwner: "contracts/libraries/TaxableToken.sol",
        setNumTokensToSwap: "contracts/libraries/TaxableToken.sol",
        setSwapRouter: "contracts/libraries/TaxableToken.sol",
        swapPair: "contracts/libraries/TaxableToken.sol",
        swapRouter: "contracts/libraries/TaxableToken.sol",
        totalFeeCollectorsShares: "contracts/libraries/TaxableToken.sol",
        updateFeeCollectorShare: "contracts/libraries/TaxableToken.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
};

export default deployedContracts;
